
---------Add Receive_WH (080910)
select a.CREATION_DATE, a.segment1 Item,a.description,a.inventory_item_status_code status,
a.Item_Type,a.PLANNER_CODE,c.FULL_NAME Buyer,
decode(a.RECEIVING_ROUTING_ID,1,'Std',2,'Inspect',3,'Direct','NA') RECEIVING_ROUTING,
(select d.ITEM_COST from apps.CST_ITEM_COST_TYPE_V d where d.ORGANIZATION_ID =130
and a.INVENTORY_ITEM_ID =d.INVENTORY_ITEM_ID(+) 
and d.COST_TYPE='Pending') ITEM_COST,
b.segment1 Category1,b.segment2 Category2,b.segment3,b.segment4,
a.purchasing_item_Flag,a.purchasing_Enabled_Flag,
decode(a.planning_make_buy_code,1,'Make',2,'Buy') Make_Buy,SUBINVENTORY_CODE Receive_WH
from apps.mtl_system_items a,apps.mtl_item_categories_v b,apps.PER_PEOPLE_V7 c,
apps.MTL_ITEM_SUB_DEFAULTS e
where a.INVENTORY_ITEM_ID=b.INVENTORY_ITEM_ID
and a.ORGANIZATION_ID=b.ORGANIZATION_ID
and a.INVENTORY_ITEM_ID=e.INVENTORY_ITEM_ID(+)
and a.ORGANIZATION_ID=e.ORGANIZATION_ID(+)
and a.ORGANIZATION_ID=130
and b.category_set_id=1
and a.BUYER_ID=c.PERSON_ID(+)



--------Planner,Buyer,Category,Type,Status,Pending Cost (VP)

CREATE OR REPLACE VIEW BMC_PE_ITEM_INFO
AS 
select a.CREATION_DATE, a.segment1 Item,a.description,a.inventory_item_status_code status,
a.Item_Type,a.PLANNER_CODE,c.FULL_NAME Buyer,
decode(a.RECEIVING_ROUTING_ID,1,'Std',2,'Inspect',3,'Direct','NA') RECEIVING_ROUTING,
(select d.ITEM_COST from apps.CST_ITEM_COST_TYPE_V d where d.ORGANIZATION_ID =130
and a.INVENTORY_ITEM_ID =d.INVENTORY_ITEM_ID(+) 
and d.COST_TYPE='Pending') ITEM_COST,
b.segment1 Category1,b.segment2 Category2,b.segment3,b.segment4,
a.purchasing_item_Flag,a.purchasing_Enabled_Flag,
decode(a.planning_make_buy_code,1,'Make',2,'Buy') Make_Buy
from apps.mtl_system_items a,apps.mtl_item_categories_v b,apps.PER_PEOPLE_V7 c
where a.INVENTORY_ITEM_ID=b.INVENTORY_ITEM_ID
and a.ORGANIZATION_ID=b.ORGANIZATION_ID
and a.ORGANIZATION_ID=130
--and  a.segment1='DPY 001'
and b.category_set_id=1
and a.BUYER_ID=c.PERSON_ID(+)

select a.CREATION_DATE, a.segment1 Item,a.description,a.inventory_item_status_code status,
a.Item_Type,a.PLANNER_CODE,c.FULL_NAME Buyer,
decode(a.RECEIVING_ROUTING_ID,1,'Std',2,'Inspect',3,'Direct','NA') RECEIVING_ROUTING,
(select d.ITEM_COST from apps.CST_ITEM_COST_TYPE_V d where d.ORGANIZATION_ID =:Org
and a.INVENTORY_ITEM_ID =d.INVENTORY_ITEM_ID(+) 
and d.COST_TYPE='Pending') ITEM_COST,
b.segment1 Category1,b.segment2 Category2,b.segment3,b.segment4,
a.purchasing_item_Flag,a.purchasing_Enabled_Flag,
decode(a.planning_make_buy_code,1,'Make',2,'Buy') Make_Buy
from apps.mtl_system_items a,apps.mtl_item_categories_v b,apps.PER_PEOPLE_V7 c
where a.INVENTORY_ITEM_ID=b.INVENTORY_ITEM_ID
and a.ORGANIZATION_ID=b.ORGANIZATION_ID
and a.ORGANIZATION_ID=:Org
--and  a.segment1='DPY 001'
and b.category_set_id=1
and a.BUYER_ID=c.PERSON_ID(+)

--or this one to solve Buyer
select a.CREATION_DATE, a.segment1 Item,a.description,a.inventory_item_status_code status,
a.Item_Type,a.PLANNER_CODE,
(select FULL_NAME from apps.PER_PEOPLE_V7 where PERSON_ID=a.BUYER_ID) Buyer,
decode(a.RECEIVING_ROUTING_ID,1,'Std',2,'Inspect',3,'Direct','NA') RECEIVING_ROUTING,
(select d.ITEM_COST from apps.CST_ITEM_COST_TYPE_V d where d.ORGANIZATION_ID =130 
and a.INVENTORY_ITEM_ID =d.INVENTORY_ITEM_ID(+) 
and d.COST_TYPE='Pending') ITEM_COST,
b.segment1 Category1,b.segment2 Category2,b.segment3,b.segment4,
a.purchasing_item_Flag,a.purchasing_Enabled_Flag,
decode(a.planning_make_buy_code,1,'Make',2,'Buy') Make_Buy
from apps.mtl_system_items a,apps.mtl_item_categories_v b
where a.INVENTORY_ITEM_ID=b.INVENTORY_ITEM_ID
and a.ORGANIZATION_ID=b.ORGANIZATION_ID
and a.ORGANIZATION_ID=130
--and  a.segment1='DPY 001'
and b.category_set_id=1
--and a.BUYER_ID=c.PERSON_ID(+)
and b.segment1='CYNDI'
and b.segment4='AC3'

--if no pending cost then no this item
sELECT a.CREATION_DATE, a.segment1 Item,a.description,a.inventory_item_status_code status,
a.Item_Type,a.PLANNER_CODE,c.FULL_NAME Buyer,
decode(a.RECEIVING_ROUTING_ID,1,'Std',2,'Inspect',3,'Direct','NA') RECEIVING_ROUTING,d.ITEM_COST,
b.segment1 Category1,b.segment2 Category2,b.segment3,b.segment4,
a.purchasing_item_Flag,a.purchasing_Enabled_Flag,
decode(a.planning_make_buy_code,1,'Make',2,'Buy') Make_Buy
from apps.mtl_system_items a,apps.mtl_item_categories_v b,apps.PER_PEOPLE_V7 c,apps.CST_ITEM_COST_TYPE_V d
where a.INVENTORY_ITEM_ID=b.INVENTORY_ITEM_ID
and a.ORGANIZATION_ID=b.ORGANIZATION_ID
and a.ORGANIZATION_ID=130
and a.ORGANIZATION_ID=d.ORGANIZATION_ID
and a.INVENTORY_ITEM_ID=d.INVENTORY_ITEM_ID
and d.COST_TYPE='Pending'
--and b.segment1=''
--and  a.segment1='KRE 101 1360'
and b.category_set_id=1
and a.BUYER_ID=c.PERSON_ID(+)

and a.CREATION_DATE>=to_date('2006-1-1','yyyy-mm-dd')



-----------Check Invoiceable Item Flag (should be all=Y for activate status)

SELECT b.ORGANIZATION_CODE, a.segment1 Item,
a.INVOICEABLE_ITEM_FLAG,a.INVOICE_ENABLED_FLAG,a.inventory_item_status_code status,a.Item_Type,  
decode(a.planning_make_buy_code,1,'Make',2,'Buy') Make_Buy,
a.purchasing_item_Flag,a.purchasing_Enabled_Flag,a.CREATION_DATE
from apps.mtl_system_items a,apps.org_organization_definitions b
where a.ORGANIZATION_ID>=127
and a.ORGANIZATION_ID=b.ORGANIZATION_ID
--and a.INVOICEABLE_ITEM_FLAG<>a.INVOICE_ENABLED_FLAG
--and a.inventory_item_status_code not in ('Pending','Inactive')
--and a.CREATION_DATE>=to_date('2006-1-1','yyyy-mm-dd')
and a.INVOICEABLE_ITEM_FLAG='N'
order by a.segment1


---------Check DPY Rev between Exist in VP,AC, but not in SE

-----To list Category Info  
(Discover Report Name : <BMC PE check DPY SE  Revision>
for Responsibility: <BMC BOM Super suer> )

CREATE OR REPLACE VIEW BMC_PE_CHECK_DPY_SE_REVISION
as
select a.segment1 Item,b.REVISION,c.segment1 Category1,c.segment2 
Category2,a.DESCRIPTION,ORGANIZATION_CODE VP_AC
from apps.mtl_system_items a,apps.MTL_ITEM_REVISIONS_B b,apps.mtl_item_categories_v c,APPS.BMC_rev_vpse d,
apps.org_organization_definitions e
where a.INVENTORY_ITEM_ID=b.INVENTORY_ITEM_ID
and  a.ORGANIZATION_ID in (130,128) and b.ORGANIZATION_ID=a.ORGANIZATION_ID  and a.item_type='DPY' 
and a.INVENTORY_ITEM_ID=c.INVENTORY_ITEM_ID
and b.ORGANIZATION_ID=c.ORGANIZATION_ID
and c.category_set_id=1
and a.segment1=d.ITEM
and b.REVISION=d.REVISION
and b.IMPLEMENTATION_DATE is not null
and a.ATTRIBUTE14 ='Y'
and inventory_item_status_code='Active'
and a.segment1 like 'DPY%'
and a.ORGANIZATION_ID=e.ORGANIZATION_ID

--used in above SQL, intrim view

CREATE OR REPLACE VIEW APPS.BMC_rev_vpse
AS 
select a.segment1 Item,b.REVISION 
from apps.mtl_system_items a,apps.MTL_ITEM_REVISIONS_B b where a.INVENTORY_ITEM_ID=b.INVENTORY_ITEM_ID
and  a.ORGANIZATION_ID=b.ORGANIZATION_ID  and a.ORGANIZATION_ID in (130,128) and item_type='DPY' 
--and a.segment1='DPY 101 2956/54'
minus
select a.segment1 Item,b.REVISION 
from apps.mtl_system_items a,apps.MTL_ITEM_REVISIONS_B b where a.INVENTORY_ITEM_ID=b.INVENTORY_ITEM_ID
and  a.ORGANIZATION_ID=b.ORGANIZATION_ID  and a.ORGANIZATION_ID=133  and item_type='DPY'



--Domestic Flag=CN, item list
SELECT b.ORGANIZATION_CODE, a.segment1 Item,a.ATTRIBUTE14 DM_Flag, 
a.inventory_item_status_code status,a.Item_Type,  
decode(a.planning_make_buy_code,1,'Make',2,'Buy') Make_Buy,
a.purchasing_item_Flag,a.purchasing_Enabled_Flag,a.CREATION_DATE
from apps.mtl_system_items a,apps.org_organization_definitions b
where a.ORGANIZATION_ID>=127
and a.ORGANIZATION_ID=b.ORGANIZATION_ID
and a.ATTRIBUTE14 is not null
--and a.inventory_item_status_code not in ('Pending','Inactive')
--and a.CREATION_DATE>=to_date('2006-1-1','yyyy-mm-dd')
order by a.segment1

----------Item B/NBond info 
SELECT a.segment1 Item,a.description, a.inventory_item_status_code status,a.ATTRIBUTE3,
b.segment1 Category1,b.segment2 Category2,b.segment3 Category3,b.segment4 Category4,c.name Org_Name
from 
apps.mtl_system_items a,apps.mtl_item_categories_v b,apps.HR_ORGANIZATION_UNITS_V c
where a.INVENTORY_ITEM_ID=b.INVENTORY_ITEM_ID
and a.ORGANIZATION_ID=b.ORGANIZATION_ID
and b.category_set_id=1
and a.ORGANIZATION_ID=c.ORGANIZATION_ID
and a.ORGANIZATION_ID in (130,132,128)
order by a.ORGANIZATION_ID


-------Item B/NBond info  with Vendor (from Sourceing Rule)
SELECT a.segment1 Item,a.description, a.inventory_item_status_code status,a.ATTRIBUTE3,
b.segment1 Category1,b.segment2 Category2,b.segment3 Category3,b.segment4 Category4,c.name Org_Name,
f.VENDOR_NAME,f.VENDOR_SITE,f.ALLOCATION_PERCENT 
from 
apps.mtl_system_items a,apps.mtl_item_categories_v b,apps.HR_ORGANIZATION_UNITS_V c,
apps.MRP_SOURCING_RULES d,apps.MRP_SR_RECEIPT_ORG e,apps.MRP_SR_SOURCE_ORG_V f
where a.INVENTORY_ITEM_ID=b.INVENTORY_ITEM_ID
and a.ORGANIZATION_ID=b.ORGANIZATION_ID
and b.category_set_id=1
and a.ORGANIZATION_ID=c.ORGANIZATION_ID
and a.ORGANIZATION_ID in (130,132,128)
and d.sourcing_rule_id=e.sourcing_rule_id
and e.SR_receipt_ID=f.SR_receipt_ID
--and d.SOURCING_RULE_NAME ='sxa 109 2797'
and d.STATUS =1
and (e.DISABLE_DATE is null or e.DISABLE_DATE >sysdate)
and a.segment1=d.SOURCING_RULE_NAME
order by a.ORGANIZATION_ID



-------Item B/NBond info  with Vendor (from ASL)
select a.segment1 item,a.description, a.inventory_item_status_code status,a.ATTRIBUTE3,
f.segment1 Category1,f.segment2 Category2,f.segment3 Category3,f.segment4 Category4,g.name Org_Name,
d.vendor_name,e.vendor_site_code,
b.VENDOR_SITE_ID
,b.asl_status_id,b.OWNING_ORGANIZATION_ID,b.disable_flag,
DECODE(b.USING_ORGANIZATION_ID, -1, 'Y','N') GLOBAL_FLAG
from apps.mtl_system_items a
,apps.PO_approved_supplier_list b
,apps.po_vendors d
,apps.po_vendor_sites_all e
,apps.mtl_item_categories_v f,apps.HR_ORGANIZATION_UNITS_V g
where a.inventory_item_id(+)=b.item_id and 
a.ORGANIZATION_ID(+)=b.OWNING_ORGANIZATION_ID and
b.vendor_id=e.vendor_id(+) and
b.VENDOR_SITE_ID=e.vendor_site_id(+) and
b.vendor_id=d.vendor_id and
d.vendor_id=e.vendor_id and
e.org_id=127 and
b.OWNING_ORGANIZATION_ID >126
and a.INVENTORY_ITEM_ID=f.INVENTORY_ITEM_ID
and a.ORGANIZATION_ID=f.ORGANIZATION_ID
and f.category_set_id=1
and a.ORGANIZATION_ID=g.ORGANIZATION_ID
--and a.segment1='DPY 901 336'
and (b.disable_flag is null or b.disable_flag='N')
and b.asl_status_id=2 
and a.ORGANIZATION_ID in (130,132,128)



